const express=require("express"),nodemailer=require("nodemailer"),multiparty=require("multiparty"),helmet=require("helmet"),compression=require("compression"),mongoose=require("mongoose");require("dotenv").config();const app=express();app.use(helmet()),app.use(compression()),mongoose.connect(process.env.MONGODB_URI,{useFindAndModify:!1,useUnifiedTopology:!0,useNewUrlParser:!0,useCreateIndex:!0,server:{socketOptions:{keepAlive:3e5,connectTimeoutMS:3e4}},replset:{socketOptions:{keepAlive:3e5,connectTimeoutMS:3e4}}},(function(e){if(e)return console.log("Error: ",e);console.log("MongoDB Connection -- Ready state is:",mongoose.connection.readyState)})),app.route("/").get((function(e,o){o.sendFile(process.cwd()+"/index.html")}));const PORT=process.env.PORT||5e3;app.listen(PORT,(()=>{console.log(`Listening on port ${PORT}...`)}));const transpoter=nodemailer.createTransport({host:"smtp.gmail.com",port:587,auth:{user:process.env.EMAIL,pass:process.env.PASS}});transpoter.verify((function(e,o){e?console.log(e):console.log("Server is ready to take our messages")})),app.post("/send",((e,o)=>{let s=new multiparty.Form,n={};s.parse(e,(function(e,s){console.log(s),Object.keys(s).forEach((function(e){n[e]=s[e].toString()}));const t={form:n.name,to:process.env.EMAIL,subject:n.subject,text:`${n.name} <${n.email}> \n${n.message}`};transpoter.sendMail(t,((e,s)=>{e?(console.log(e),o.status(500).send("Something went wrong.")):o.status(500).send("Email successfully sent to recipient!")}))}))}));